name: ci

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

env:
  DENO_DIR: ../.deno_cache

jobs:
  test:
    strategy:
      matrix:
        deno: ['v1.x', 'canary']
        os:
          - macos-latest
          - ubuntu-latest
          # - windows-latest

    timeout-minutes: 5
    runs-on: ${{ matrix.os }}

    steps:
      - name: 🏴‍☠️ Checkout code repository
        uses: actions/checkout@v3

      - name: 📦 Cache deno dependencies
        uses: actions/cache@v3
        with:
          path: ${{ env.DENO_DIR }}
          key: ${{ secrets.CACHE_VERSION }}-${{ hashFiles('lock.json') }}-${{ matrix.deno }}-${{ matrix.os }}

      - name: 🦕 Setup deno
        uses: denoland/setup-deno@v1.0.0
        with:
          deno-version: ${{ matrix.deno }}

      - name: 🔒 Lock cache
        run: deno task lock
        shell: bash

      - name: 🚨 Formatting
        if: startsWith(matrix.os, 'ubuntu') && matrix.deno == 'canary'
        uses: dprint/check@v2.0

      - name: 🔨 Lint
        if: startsWith(matrix.os, 'ubuntu') && matrix.deno == 'canary'
        run: deno lint
        shell: bash

      - name: 🩺 Typecheck
        run: deno task typecheck
        shell: bash

      - name: ✅ Unit test
        run: deno task test

      - name: 🧑‍💻 Install
        run: |
          deno task install
          echo "${HOME}/.deno/bin" >> $GITHUB_PATH
        shell: bash

      - name: 🚀 Scaffold
        run: scaffold --help
        shell: bash
